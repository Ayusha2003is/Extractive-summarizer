from flask import Flask
from flask_cors import CORS
from flask_jwt_extended import JWTManager
from flask_bcrypt import Bcrypt
from dotenv import load_dotenv
import os

load_dotenv()

app = Flask(__name__)

# CORS configuration
CORS(app, 
     resources={r"/auth/*": {"origins": ["http://localhost:5173"]}},  # Update to 5174
     supports_credentials=True,
     allow_headers=["Content-Type", "Authorization", "Access-Control-Allow-Credentials"],
     methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],
     expose_headers=["Content-Type", "Authorization"])

# App configuration
app.config['SQLALCHEMY_DATABASE_URI'] = os.getenv('DATABASE_URL', 'sqlite:///mydb.sqlite3')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['JWT_SECRET_KEY'] = os.getenv('JWT_SECRET_KEY', 'jwtsecret')

# Initialize database
from models import db
db.init_app(app)

# Initialize other extensions
bcrypt = Bcrypt(app)
jwt = JWTManager(app)

# Import and register blueprints
from auth import auth, set_bcrypt_instance
set_bcrypt_instance(bcrypt)
app.register_blueprint(auth, url_prefix="/auth")

if __name__ == "__main__":
    with app.app_context():
        from models import User
        db.create_all()
        print("Database tables created successfully")
    
    print("Starting Flask server...")
    app.run(debug=True, host='127.0.0.1', port=5000)
